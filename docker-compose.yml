version: '3.8'

services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: hackathon-backend
    ports:
      - "5000:5000"
    environment:
      - FLASK_ENV=production
      - FLASK_APP=app.py
      - LOG_LEVEL=INFO
    volumes:
      - ./backend/logs:/app/logs
    networks:
      - hackathon-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "python", "-c", "import requests; requests.get('http://localhost:5000/health')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        VITE_ENVIRONMENT_TYPE: ${VITE_ENVIRONMENT_TYPE:-dev}
        VITE_BACKEND_URL_DEV: ${VITE_BACKEND_URL_DEV:-http://127.0.0.1:5000}
        VITE_BACKEND_URL_PROD: ${VITE_BACKEND_URL_PROD:-https://desirable-gentleness-production.up.railway.app}
        VITE_FRONTEND_URL_DEV: ${VITE_FRONTEND_URL_DEV:-http://localhost:5173}
        VITE_FRONTEND_URL_PROD: ${VITE_FRONTEND_URL_PROD:-https://global-hackathon-v1-production.up.railway.app}
        VITE_APP_NAME: ${VITE_APP_NAME:-Hackathon App}
        VITE_APP_VERSION: ${VITE_APP_VERSION:-1.0.0}
    container_name: hackathon-frontend
    ports:
      - "3000:3000"
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - hackathon-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

networks:
  hackathon-network:
    driver: bridge

volumes:
  backend-logs:
    driver: local
