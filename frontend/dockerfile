# Multi-stage build for React frontend - Railway optimized
# Stage 1: Build the application
FROM node:18-alpine AS builder

# Set working directory
WORKDIR /app

# Environment variables for build
ARG VITE_ENVIRONMENT_TYPE=production
ARG VITE_BACKEND_URL_PROD
ARG VITE_FRONTEND_URL_PROD
ARG VITE_BACKEND_URL_DEV
ARG VITE_FRONTEND_URL_DEV

ENV VITE_ENVIRONMENT_TYPE=$VITE_ENVIRONMENT_TYPE
ENV VITE_BACKEND_URL_PROD=$VITE_BACKEND_URL_PROD
ENV VITE_FRONTEND_URL_PROD=$VITE_FRONTEND_URL_PROD
ENV VITE_BACKEND_URL_DEV=$VITE_BACKEND_URL_DEV
ENV VITE_FRONTEND_URL_DEV=$VITE_FRONTEND_URL_DEV

# Copy package files
COPY package*.json ./

# Install dependencies with proper platform handling
RUN npm ci --include=dev && \
    npm cache clean --force

# Copy source code
COPY . .

# Build the application with fallback for Rollup issues
RUN npm run build || ( \
    echo "Build failed, trying to fix Rollup dependencies..." && \
    rm -rf node_modules package-lock.json && \
    npm install && \
    npm run build \
)

# Stage 2: Serve the application
FROM node:18-alpine AS runner

# Set working directory
WORKDIR /app

# Install serve globally
RUN npm install -g serve

# Copy built application from builder stage
COPY --from=builder /app/dist ./dist

# Create non-root user
RUN addgroup -g 1001 -S appuser && \
    adduser -S -D -H -u 1001 -h /app -s /sbin/nologin -G appuser -g appuser appuser

# Set proper permissions
RUN chown -R appuser:appuser /app

# Switch to non-root user
USER appuser

# Expose port
EXPOSE 3000

# Health check
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
    CMD wget --no-verbose --tries=1 --spider http://localhost:3000/ || exit 1

# Start the application using serve
CMD ["serve", "-s", "dist", "-l", "3000"]
